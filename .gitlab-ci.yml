services:
  - postgres
  - node
  - python:3.6-alpine

variables:
  # Configure postgres service (https://hub.docker.com/_/postgres/)
  POSTGRES_DB: ece651
  POSTGRES_USER: ece651_admin
  POSTGRES_PASSWORD: YbRvAizCTnbQ5W6JI69h
  PG_SCRAPER_USER: ece651_scraper
  PG_SCRAPER_PASS: wxJcTdJYUU3mMAsAa5YD
  PG_ML_USER: ece651_ml
  PG_ML_PASS: TVL3MV0mguz0DOhLbbm2
  PG_WEB_USER: ece651_web
  PG_WEB_PASS: dm2fBdodbrHPtJVvlSKF

setup db:
  image: postgres
  only:
    - tags
    - triggers
  stage: build
  script:
    # official way to provide password to psql: http://www.postgresql.org/docs/9.3/static/libpq-envars.html
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f src/db/create-users_postgre.sql
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f src/db/database-create_postgre.sql
    - export PGPASSWORD=$PG_SCRAPER_PASS
    - psql -h "postgres" -U "$PG_SCRAPER_USER" -d "$POSTGRES_DB" -c 'SELECT * FROM public."BookOfTheDay";'
    - export PGPASSWORD=$PG_ML_PASS
    - psql -h "postgres" -U "$PG_ML_USER" -d "$POSTGRES_DB" -c 'SELECT * FROM public."Books";'
    - export PGPASSWORD=$PG_WEB_PASS
    - psql -h "postgres" -U "$PG_WEB_USER" -d "$POSTGRES_DB" -c 'SELECT * FROM public."Users";'

node version:
  only:
    - tags
    - triggers
  stage: test
  image: node
  script:
    - node --version
    - cd src/web
    - npm install

python tests:
  only:
    - tags
    - triggers
  stage: test
  image: python:3.6-alpine
  before_script:
    - cd src/scraper
    - apk add --no-cache postgresql-libs
    - apk add --no-cache --virtual .build-deps gcc musl-dev postgresql-dev
    - pip install -r requirements.txt
  script:
    - export PGPASSWORD=$PG_SCRAPER_PASS
    - psql -h "postgres" -U "$PG_SCRAPER_USER" -d "$POSTGRES_DB" -c 'SELECT * FROM public."BookOfTheDay";'
    - export TESTENV=true
    - python -m unittest discover