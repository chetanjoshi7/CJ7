variables:
  # Configure postgres service (https://hub.docker.com/_/postgres/)
  POSTGRES_DB: ece651
  POSTGRES_USER: ece651_admin
  POSTGRES_PASSWORD: YbRvAizCTnbQ5W6JI69h
  PG_SCRAPER_USER: ece651_scraper
  PG_SCRAPER_PASS: wxJcTdJYUU3mMAsAa5YD
  PG_ML_USER: ece651_ml
  PG_ML_PASS: TVL3MV0mguz0DOhLbbm2
  PG_WEB_USER: ece651_web
  PG_WEB_PASS: dm2fBdodbrHPtJVvlSKF

setup image:
  image: ubuntu
  only:
    - tags
    - triggers
  stage: build
  script:
    # Install python3 and requirements for below (MUST BE FIRST!)
    - apt update && apt install -y curl wget gnupg2 gcc musl-dev python3
    # INSTALL POSTGRES
    - RELEASE=$(cat /etc/os-release  | grep VERSION_CODENAME  | cut -d= -f2)
    - echo "deb http://apt.postgresql.org/pub/repos/apt/ ${RELEASE}"-pgdg main | tee  /etc/apt/sources.list.d/pgdg.list
    - wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
    - apt update
    - apt install -qq -y postgresql-11 postgresql-server-dev-11 libpq-dev
    # INSTALL NODEJS
    - curl -sL https://deb.nodesource.com/setup_10.x | bash -
    - apt install -qq -y nodejs
    #
    #
    # Check versions of software
    - node --version
    - python3 --version
    - psql --version
    # 
    # 
    # SWITCH TO postgres USER AND SETUP USER TO CONNECT
    - su postgres
    - /etc/init.d/postgresql start
    - psql --command "CREATE USER $POSTGRES_USER WITH SUPERUSER PASSWORD '$POSTGRES_PASSWORD';"
    - createdb -O $POSTGRES_DB $POSTGRES_DB
    - exit
    # 
    # 
    # SETUP THE DATABASE
    # official way to provide password to psql: http://www.postgresql.org/docs/9.3/static/libpq-envars.html
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h "localhost" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f src/db/create-users_postgre.sql
    #- psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f src/db/database-create_postgre.sql
    - psql -q -h "localhost" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f src/db/create_tables_load_content.sql
    - export PGPASSWORD=$PG_SCRAPER_PASS
    - psql -h "localhost" -U "$PG_SCRAPER_USER" -d "$POSTGRES_DB" -c 'SELECT * FROM public."BookOfTheDay" LIMIT 10;'
    - export PGPASSWORD=$PG_ML_PASS
    - psql -h "localhost" -U "$PG_ML_USER" -d "$POSTGRES_DB" -c 'SELECT * FROM public."Books" LIMIT 10;'
    - psql -h "localhost" -U "$PG_ML_USER" -d "$POSTGRES_DB" -c 'SELECT * FROM public."BookDetails" LIMIT 10;'
    - export PGPASSWORD=$PG_WEB_PASS
    - psql -h "localhost" -U "$PG_WEB_USER" -d "$POSTGRES_DB" -c 'SELECT * FROM public."Users" LIMIT 10;'

node version:
  only:
    - tags
    - triggers
  stage: test
  image: ubuntu
  script:
    - node --version
    - cd src/web
    - npm install

python tests:
  only:
    - tags
    - triggers
  stage: test
  image: ubuntu
  before_script:
    - cd src/scraper
    - pip install -r requirements.txt
  script:
    - export PGPASSWORD=$PG_SCRAPER_PASS
    - psql -h "postgres" -U "$PG_SCRAPER_USER" -d "$POSTGRES_DB" -c 'SELECT * FROM public."BookOfTheDay";'
    - export TESTENV=true
    - python -m unittest discover